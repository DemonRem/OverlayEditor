#!/bin/bash

export PYTHONPATH=$PYTHONPATH:..
VERSION=`python -c "from version import appversion; print '%4.2f' % appversion"`
VER=`python -c "from version import appversion; print int(round(appversion*100,0))"`
APPNAME=`python -c "from version import appname; print appname"`
APPLINUX=`python -c "from version import appname; print appname.lower()"`
RELEASE=1

rm -f ../${APPLINUX}-$VERSION-$RELEASE.x86_64.rpm
rm -f ../${APPLINUX}_$VERSION-$RELEASE_amd64.deb

PY='OverlayEditor.py apt.py buckets.py clutter.py clutterdef.py contextlib2.py draw.py elevation.py DSFLib.py files.py fixed8x13.py MessageBox.py imagery.py importobjs.py lock.py nodes.py palette.py prefs.py version.py'
RSRC=`ls ../Resources/*.{html,png,vs,fs,obj,jpg}`
PREV='../Resources/previews/*.jpg'

# linux
RPM=/tmp/${APPLINUX}
RPMRT=$RPM/root
rm -rf $RPM
#mkdir -p $RPM/BUILD
#mkdir -p $RPM/SOURCES
mkdir -p $RPM/SPECS
#mkdir -p $RPM/RPMS/noarch
mkdir -p $RPMRT/usr/local/bin
mkdir -p $RPMRT/usr/local/lib/${APPLINUX}/Resources
mkdir -p $RPMRT/usr/local/lib/${APPLINUX}/Resources/previews
mkdir -p $RPMRT/usr/local/lib/${APPLINUX}/linux
mkdir -p $RPMRT/usr/local/share/applications
mkdir -p $RPMRT/usr/local/share/icons/hicolor/48x48/apps
mkdir -p $RPMRT/usr/local/share/icons/hicolor/128x128/apps
cp -p ${APPLINUX}.spec $RPM/SPECS/
cp -p ${APPLINUX} $RPMRT/usr/local/bin/
cp -p ${APPLINUX}.desktop $RPMRT/usr/local/share/applications/
cp -p ../Resources/${APPNAME}.png $RPMRT/usr/local/share/icons/hicolor/48x48/apps/${APPLINUX}.png
cp -p ${APPNAME}-128.png $RPMRT/usr/local/share/icons/hicolor/128x128/apps/${APPLINUX}.png
cp -p ${APPNAME}-128.png $RPMRT/usr/local/lib/${APPLINUX}/Resources/
for i in $PY; do cp -p "../$i" $RPMRT/usr/local/lib/${APPLINUX}/; done
for i in $RSRC; do cp -p "$i" $RPMRT/usr/local/lib/${APPLINUX}/Resources/; done
for i in $PREV; do cp -p "$i" $RPMRT/usr/local/lib/${APPLINUX}/Resources/previews/; done
sed --in-place -e 's/Cmd/Ctrl/g' -e 's/&#8598;/Home/g' -e 's/&#8600;/End/g' -e 's/&nbsp;&#8670;&nbsp;/PageUp/g' -e 's/&nbsp;&#8671;&nbsp;/PageDn/g' $RPMRT/usr/local/lib/${APPLINUX}/Resources/${APPNAME}.html
cp -p DSFTool $RPMRT/usr/local/lib/${APPLINUX}/linux/
rpmbuild -bb --buildroot $RPMRT --noclean --define "_topdir $RPM" --define "_unpackaged_files_terminate_build 0" --define "version $VERSION" --define "release $RELEASE" $RPM/SPECS/${APPLINUX}.spec
mv $RPM/RPMS/x86_64/${APPLINUX}-$VERSION-$RELEASE.x86_64.rpm ..

# Debian/Ubuntu
mkdir -p $RPMRT/DEBIAN
echo Version: $VERSION-$RELEASE> $RPMRT/DEBIAN/control
cat   control >> $RPMRT/DEBIAN/control
cp -p postinst   $RPMRT/DEBIAN/
mkdir -p $RPMRT/usr/local/share/doc/${APPLINUX}/
cp -p copyright  $RPMRT/usr/local/share/doc/${APPLINUX}/
fakeroot dpkg-deb -b $RPMRT ..	# requires gnu-tar
